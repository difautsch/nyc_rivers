
    "import pandas as pd\n",
    "f = open('2019_raw.csv','r')\n",
    "data = f.read()\n",
    "rows = data.split('\\n')\n",
    "test = []\n",
    "\n",
    "pd.set_option('display.max_rows', 1000)\n",
    "#three lists: site_data and site_name and year\n",
    "site_data = []\n",
    "site_names = []\n",
    "year = []\n",
    "#data is most definitely 2018_raw\n",
    "#print (data)\n",
    "for i in rows:\n",
    "    i = i.split(':')\n",
    "    test.append(i)\n",
    "#list element of test corresponds to a site's testing values    \n",
    "#print (test[4:7])\n",
    "for item in test[4:]:\n",
    "    #within 'item' except for first item, the data is in the second element of the list, and is the second sub-element\n",
    "    item_split = item[0].split(',')\n",
    "    site = (item_split[0])\n",
    "    for items in item[1:]:\n",
    "        data = items.split(',')\n",
    "        #two sites causing errors bc blank values and items with only one value\n",
    "        if len(data) == 1:\n",
    "            continue\n",
    "        site_data.append(data[1])\n",
    "        site_names.append(site)\n",
    "        year.append('2018')\n",
    "#convert strings to numeric int32 \n",
    "for idx, value in enumerate(site_data):\n",
    "    if value == '<10':\n",
    "        value = 10\n",
    "        site_data[idx] = value\n",
    "    if value == '>24196':\n",
    "        value = 24196\n",
    "        site_data[idx] = value\n",
    "#delete three blank values for error handling\n",
    "for idx, value in enumerate(site_data):\n",
    "    try: \n",
    "        int (value)\n",
    "    except:\n",
    "        del site_data[idx]\n",
    "        del site_names[idx]\n",
    "        del year[idx]\n",
    "        \n",
    "#create dataframe \n",
    "df = pd.DataFrame(list(zip(site_names,site_data,year)), columns = ['site_names','bacteria','year'])\n",
    "df = df.astype({'bacteria':'int32'})\n",
    "\n",
    "df.describe()\n",
    "print (df)\n",
    "df.to_csv('2019clean')"
   ]
 
